// controllers/horoscopebot.js
import { GoogleGenerativeAI } from '@google/generative-ai';
import dotenv from 'dotenv';

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ ENV (.env)
dotenv.config();

// ‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡∏Ç‡∏≠‡∏á Gemini ‡∏î‡πâ‡∏ß‡∏¢ API Key
const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);

export const getHoroscope = async (req, res) => {
  try {
    const { prompt } = req.body;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ prompt ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å frontend ‡πÑ‡∏´‡∏°
    if (!prompt) {
      return res.status(400).json({ message: '‡∏Ç‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• prompt' });
    }

    console.log("üì© ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö prompt ‡∏à‡∏≤‡∏Å frontend:", prompt);

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏• Gemini
    const model = genAI.getGenerativeModel({ model: 'gemini-pro' });

    // ‡∏™‡πà‡∏á prompt ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Gemini
    const result = await model.generateContent(prompt);

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å response
    const response = await result.response;
    const text = response.text();

    console.log("‚úÖ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å Gemini:", text);

    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á frontend
    res.json({ response: text });

  } catch (error) {
    console.error("‚ùå Gemini API error:", error);

    // ‡∏™‡πà‡∏á error response ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á frontend
    res.status(500).json({
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å Gemini API',
      error: error.message
    });
  }
};
